security:
    password_hashers:
        App\Entity\AppUser:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\AppUser
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/login$
            stateless: true
            json_login:
                check_path: /login
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        
        register:
            pattern: ^/register$
            stateless: true
            security: false

        main:
            pattern: ^/
            stateless: true
            provider: app_user_provider
            jwt: ~

    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/library$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/book, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/, roles: PUBLIC_ACCESS }